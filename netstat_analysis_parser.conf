input {
   file
    {
    path => "/home/avk03/JarAndZip/jar-file/config/logstash-6.1.1/Logs/try.txt"
    start_position => "beginning"
   }
}

filter
{
    multiline {
      pattern => "^%{WORD:}: %{TIME}"
      negate => true
      what => "previous"
    }

 grok {
        break_on_match => true 
 match =>
   {
    message => '^%{WORD:}: %{TIME:time} %{GREEDYDATA} %{WORD:protocol}%{SPACE}%{IPORHOST:localaddress}:%{POSINT:port}%{SPACE}%{IPORHOST:ForeignAddress}:%{NUMBER:port2}%{SPACE}%{WORD:state}'
   }
 match =>
   {
    message => '^%{WORD:protocol}%{SPACE}%{DATA:localaddress}:%{POSINT:port}%{SPACE}%{DATA:ForeignAddress}:%{NUMBER:port2}%{SPACE}%{WORD:state}'
   }
}

}


output
{
if "_grokparsefailure" not in [tags]
{
  elasticsearch 
        {
       hosts => ["localhost:9200"]
       index => "netstat_data"
         }
}
   stdout { codec => rubydebug }
}
